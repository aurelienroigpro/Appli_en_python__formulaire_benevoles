import streamlit as st
import pandas as pd
import plotly.express as px
from geopy.geocoders import Nominatim

# ----------------------------
# Configuration de la page
# ----------------------------
st.set_page_config(page_title="Analyse B√©n√©voles", page_icon="üìä", layout="wide")

st.title("üìä Analyse des b√©n√©voles de l'association")
st.write("Visualisation des donn√©es issues du fichier des b√©n√©voles.")

# ----------------------------
# Chargement du fichier CSV
# ----------------------------
# üîπ Mets ici le lien brut (raw) GitHub vers ton CSV :
url = "benevoles_fictifs.csv"

try:
    df = pd.read_csv(url)
    st.success("‚úÖ Donn√©es charg√©es depuis GitHub !")
except Exception as e:
    st.error("‚ö†Ô∏è Impossible de charger le fichier CSV.")
    st.stop()

# ----------------------------
# Nettoyage et pr√©paration
# ----------------------------
df["Ville"] = df["Ville"].str.strip().str.title()
df["Sexe"] = df["Sexe"].str.strip().str.capitalize()

# ----------------------------
# 1Ô∏è‚É£ R√©partition hommes / femmes
# ----------------------------
st.subheader("üë´ R√©partition par sexe")

sexe_counts = df["Sexe"].value_counts(normalize=True) * 100
sexe_table = pd.DataFrame({
    "Sexe": sexe_counts.index,
    "Pourcentage": sexe_counts.values.round(1)
})

st.table(sexe_table)

fig_sexe = px.pie(sexe_table, names="Sexe", values="Pourcentage", title="R√©partition Hommes / Femmes", color_discrete_sequence=["#66c2a5","#fc8d62"])
st.plotly_chart(fig_sexe, use_container_width=True)

# ----------------------------
# 2Ô∏è‚É£ Carte de France - concentration par ville
# ----------------------------
st.subheader("üó∫Ô∏è Carte des b√©n√©voles par ville")

# Comptage du nombre de b√©n√©voles par ville
ville_counts = df.groupby(["Ville", "Code postal"]).size().reset_index(name="Nombre de b√©n√©voles")

# G√©ocodage des villes (on garde un cache pour √©viter les appels r√©p√©t√©s)
@st.cache_data
def geocode_villes(villes):
    geolocator = Nominatim(user_agent="benevoles_app")
    coords = []
    for ville in villes:
        try:
            location = geolocator.geocode(f"{ville}, France")
            if location:
                coords.append((ville, location.latitude, location.longitude))
            else:
                coords.append((ville, None, None))
        except:
            coords.append((ville, None, None))
    return pd.DataFrame(coords, columns=["Ville", "lat", "lon"])

# Ajout des coordonn√©es
coords_df = geocode_villes(ville_counts["Ville"].unique())
ville_geo = pd.merge(ville_counts, coords_df, on="Ville", how="left")

# Suppression des villes non localis√©es
ville_geo = ville_geo.dropna(subset=["lat", "lon"])

# Affichage sur une carte interactive
fig_map = px.scatter_mapbox(
    ville_geo,
    lat="lat",
    lon="lon",
    size="Nombre de b√©n√©voles",
    color="Nombre de b√©n√©voles",
    hover_name="Ville",
    hover_data={"Code postal": True, "lat": False, "lon": False},
    color_continuous_scale="Viridis",
    size_max=40,
    zoom=4,
    mapbox_style="carto-positron",
    title="R√©partition g√©ographique des b√©n√©voles"
)

st.plotly_chart(fig_map, use_container_width=True)

# ----------------------------
# 3Ô∏è‚É£ Tableau r√©sum√©
# ----------------------------
st.subheader("üìã D√©tail des villes")
st.dataframe(ville_geo[["Ville", "Code postal", "Nombre de b√©n√©voles"]].sort_values("Nombre de b√©n√©voles", ascending=False))
